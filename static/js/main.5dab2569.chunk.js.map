{"version":3,"sources":["Snake.js","GameOver.js","Food.js","App.js","serviceWorker.js","index.js"],"names":["props","snakeDots","map","dot","i","style","left","top","className","key","status","snakeLength","getRandomCoordinates","Math","floor","random","App","state","food","speed","direction","turns","onKeyDown","e","window","event","keyCode","startGame","setState","moveSnake","dots","head","length","push","shift","setInterval","this","document","onkeydown","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","pop","forEach","enlargeSnake","increaseSpeed","newSnake","unshift","Snake","GameOver","Food","target","href","src","process","alt","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5dab2569.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        }\r\n        return (\r\n          <div className=\"snake-dot\" key={i} style={style}></div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n    if (props.status) {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>Game Over!</h4>\r\n            <p>Your score was {props.snakeLength}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n  const style = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  }\r\n\r\n  return (\r\n    <div className=\"snake-food\" style={style}></div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport Snake from './Snake';\r\nimport GameOver from './GameOver';\r\nimport Food from './Food';\r\n\r\nconst getRandomCoordinates = () => {\r\n  let min = 1;\r\n  let max = 96;\r\n  let x = Math.floor((Math.random()*(max-min+1)+min)/4)*4;\r\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/4)*4;\r\n  return [x,y]\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    food: getRandomCoordinates(),\r\n    speed: 200,\r\n    direction: 'RIGHT',\r\n    snakeDots: [\r\n      [0,0],\r\n      [4,0]\r\n    ],\r\n    status: false,\r\n    snakeLength: 0,\r\n    turns: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfOutOfBorders();\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 13:\r\n        if (this.state.status==false) { this.startGame(); }\r\n        break;\r\n      case 38:\r\n        if (this.state.status==true) { this.setState({direction: 'UP'}); }\r\n        break;\r\n      case 40:\r\n        this.setState({direction: 'DOWN'});\r\n        this.startGame();\r\n        break;\r\n      case 37:\r\n        this.setState({direction: 'LEFT'});\r\n        this.startGame();\r\n        break;\r\n      case 39:\r\n        this.setState({direction: 'RIGHT'});\r\n        this.startGame();\r\n        break;\r\n    }\r\n  }\r\n\r\n  moveSnake = () => {\r\n    if (this.state.status) {\r\n      let dots = [...this.state.snakeDots];\r\n      let head = dots[dots.length - 1];\r\n\r\n      switch (this.state.direction) {\r\n        case 'RIGHT':\r\n          head = [head[0] + 4, head[1]];\r\n          break;\r\n        case 'LEFT':\r\n          head = [head[0] - 4, head[1]];\r\n          break;\r\n        case 'DOWN':\r\n          head = [head[0], head[1] + 4];\r\n          break;\r\n        case 'UP':\r\n          head = [head[0], head[1] - 4];\r\n          break;\r\n      }\r\n      dots.push(head);\r\n      dots.shift();\r\n      this.setState({\r\n        snakeDots: dots\r\n      })\r\n    }\r\n  }\r\n\r\n  checkIfOutOfBorders() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.onGameOver();\r\n    }\r\n  }\r\n\r\n  checkIfCollapsed() {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n    snake.forEach(dot => {\r\n      if (head[0] == dot[0] && head[1] == dot[1]) {\r\n        this.onGameOver();\r\n      }\r\n    })\r\n  }\r\n\r\n  checkIfEat() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] == food[0] && head[1] == food[1]) {\r\n      this.setState({\r\n        food: getRandomCoordinates()\r\n      })\r\n      this.enlargeSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  }\r\n\r\n  enlargeSnake() {\r\n    let newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([])\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    })\r\n  }\r\n\r\n  increaseSpeed() {\r\n    if (this.state.speed > 20) {\r\n      this.setState({\r\n        speed: this.state.speed - 20\r\n      })\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.setState({\r\n      status: true\r\n    })\r\n  }\r\n\r\n  onGameOver() {\r\n    let snakeLength = this.state.snakeDots.length - 2;\r\n    let turns = this.state.turns + 1;\r\n    this.setState({\r\n      food: getRandomCoordinates(),\r\n      speed: 200,\r\n      direction: 'RIGHT',\r\n      snakeDots: [\r\n        [0,0],\r\n        [4,0]\r\n      ],\r\n      status: false,\r\n      snakeLength: snakeLength,\r\n      turns: turns\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"game-area\">\r\n          {((this.state.status===false) && (this.state.turns != 0)) ?\r\n          null : <Snake snakeDots={this.state.snakeDots}/>}\r\n          {(this.state.turns != 0) ? <GameOver status={this.state.status} snakeLength={this.state.snakeLength}/> : null }\r\n          {((this.state.status===false) && (this.state.turns != 0)) ?\r\n          null : <Food dot={this.state.food}/>}\r\n        </div>\r\n        <div className=\"info-area\">\r\n          <div className=\"info-box\">\r\n            <p>Score</p>\r\n            <h3 className=\"game-info\">{this.state.snakeDots.length - 2}</h3>\r\n          </div>\r\n          <div className=\"about-box\">\r\n            <a target=\"blank\" href=\"https://github.com/pauljoshi\">\r\n              <img src={process.env.PUBLIC_URL + '/logos/github.png'} className=\"icon\" alt=\"Github\" />\r\n            </a>\r\n            <a target=\"blank\" href=\"https://www.instagram.com/thepauljoshi/\">\r\n              <img src={process.env.PUBLIC_URL + '/logos/instagram.png'} className=\"icon\" alt=\"Instagram\" />\r\n            </a>\r\n            <a target=\"blank\" href=\"https://twitter.com/ThePaulJoshi\">\r\n              <img src={process.env.PUBLIC_URL + '/logos/twitter.png'} className=\"icon\" alt=\"Twitter\" />\r\n            </a>\r\n            <a target=\"blank\" href=\"https://www.facebook.com/ThePaulJoshi\">\r\n              <img src={process.env.PUBLIC_URL + '/logos/facebook.png'} className=\"icon\" alt=\"Facebook\" />\r\n            </a>\r\n            <a target=\"blank\" href=\"https://www.behance.net/pauljoshi\">\r\n              <img src={process.env.PUBLIC_URL + '/logos/behance.png'} className=\"icon\" alt=\"Behance\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}